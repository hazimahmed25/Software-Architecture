import java.util.*;

public class driver extends USER implements subject, observer, observer {

    public driver(String username, String pass,String phone_number, String email, String license, String NID) {
        super(username,phone_number,email,pass);

 
  public String getUsername() {
    return username;
  }
  public void setUsername(String newName) {
    this.username = newName;
    }

    public String getPass() {
        return pass;
      }
      public void setPass(String newPass) {
        this.pass = newPass;
    }

    public String getPhone_number() {
        return phone_number;
      }
      public void setPhone_number(String newPhone_number) {
        this.phone_number = newPhone_number;
      }

      public String getEmail() {
        return email;
      }
      public void setEmail(String newEmail) {
        this.email = newEmail;

      }

      public String getLicense() {
        return license;
      }
      public void setLicense(String newLicense) {
        this.license = newLicense;
      }

      public String getNID() {
        return NID;
      }
      public void setNID(String newNID) {
        this.NID = newNID;
      }

      public String getdriverID() {
        return driverID;
      }
      public void setDriverID(String newdriverID) {
        this.driverID = newdriverID;
    }
    
    private float driver_balance;

    {
        return Ridecost();
    }

    public  void register() {
		hashmap.put(username , this );
        hashmap.put(pass , this );
        hashmap.put(email , this );
        hashmap.put(NID , this );
        hashmap.put(license , this );
        hashmap.put(phone_number , this );
	}
	
	public boolean login() {
		Admin i = new Admin(); 
		return i.verifyRegisteration(this) ;
	}

	public void addToFavoriteArea(String area) {
		favoriteArea.add(area);
	}

    public void updateRide(Ride r) {
		for(int i=0 ; i<favoriteArea.size(); i++)
			if(favoriteArea.get(i) == r.source) {
				System.out.println("Source requested ride " + r.source);
			}
	}
	public void updateOffer(double i) {

        for(int i=0 ; i<5; i++)
           {
		updateOffer(i);
			}
}

}
 
